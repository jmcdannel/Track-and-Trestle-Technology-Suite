@import "../theme";

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

.connections {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.connection {
  display: flex;
  flex: 0 0 30%;
  max-width: 30rem;
  width: 100%;
  margin: 5rem 0;
  flex-direction: column;
  align-items: stretch;
  justify-content: space-between;
  margin: 1rem;
  border-radius: 1rem;
  background: linear-gradient(140deg, rgb(71, 91, 235) 0%, rgba(46, 62, 187, 0.8) 100%);
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease-in-out;

  &__status {
    span {
      visibility: hidden;
    }
  }
}

$connected: #00ff00;
$disconnected: #ff0000;
$pending: #ffff00;
$unknown: #cccccc;

.status {
  &--connected {
    color: $connected;
  }
  &--disconnected {
    color: $disconnected;
  }
  &--pending {
    color: $pending;
  }
  &--unknown {
    color: $unknown;
  }
}
.MuiButtonBase-root {
  .status {
    &--connected {
      &.MuiChip-icon {
        color: $connected;
      }
    }
    &--disconnected {
      &.MuiChip-icon {
        color: $disconnected;
      }
    }
    &--pending {
      &.MuiChip-icon {
        color: $pending;
      }
    }
    &--unknown {
      &.MuiChip-icon {
        color: $unknown;
      }
    }
  }
}